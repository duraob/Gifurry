{"ast":null,"code":"import _slicedToArray from \"/home/jet/Documents/buildspace/Gifurry/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/jet/Documents/buildspace/Gifurry/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jet/Documents/buildspace/Gifurry/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\n\nvar TransactionFactory = /*#__PURE__*/function () {\n  function TransactionFactory() {\n    _classCallCheck(this, TransactionFactory);\n  }\n\n  _createClass(TransactionFactory, null, [{\n    key: \"build\",\n    value: function build(idlIx, ixFn) {\n      var txFn = function txFn() {\n        var _a;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _splitArgsAndCtx = splitArgsAndCtx(idlIx, [].concat(args)),\n            _splitArgsAndCtx2 = _slicedToArray(_splitArgsAndCtx, 2),\n            ctx = _splitArgsAndCtx2[1];\n\n        var tx = new Transaction();\n        (_a = ctx.instructions) === null || _a === void 0 ? void 0 : _a.forEach(function (ix) {\n          return tx.add(ix);\n        });\n        tx.add(ixFn.apply(void 0, args));\n        return tx;\n      };\n\n      return txFn;\n    }\n  }]);\n\n  return TransactionFactory;\n}();\n\nexport { TransactionFactory as default };","map":{"version":3,"sources":["../../../../src/program/namespace/transaction.ts"],"names":[],"mappings":";;;AAAA,SAAS,WAAT,QAA4B,iBAA5B;AAEA,SAAS,eAAT,QAAgC,YAAhC;;IAQqB,kB;;;;;;;WACZ,eACL,KADK,EAEL,IAFK,EAEsB;AAE3B,UAAM,IAAI,GAA0B,SAA9B,IAA8B,GAAyB;;;AAAA,0CAArB,IAAqB;AAArB,UAAA,IAAqB;AAAA;;AAC3D,+BAAgB,eAAe,CAAC,KAAD,YAAY,IAAZ,EAA/B;AAAA;AAAA,YAAS,GAAT;;AACA,YAAM,EAAE,GAAG,IAAI,WAAJ,EAAX;AACA,SAAA,EAAA,GAAA,GAAG,CAAC,YAAJ,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,OAAF,CAAU,UAAC,EAAD;AAAA,iBAAQ,EAAE,CAAC,GAAH,CAAO,EAAP,CAAR;AAAA,SAAV,CAAhB;AACA,QAAA,EAAE,CAAC,GAAH,CAAO,IAAI,MAAJ,SAAQ,IAAR,CAAP;AACA,eAAO,EAAP;AACD,OAND;;AAQA,aAAO,IAAP;AACD;;;;;;SAdkB,kB","sourceRoot":"","sourcesContent":["import { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\nexport default class TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            var _a;\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new Transaction();\n            (_a = ctx.instructions) === null || _a === void 0 ? void 0 : _a.forEach((ix) => tx.add(ix));\n            tx.add(ixFn(...args));\n            return tx;\n        };\n        return txFn;\n    }\n}\n//# sourceMappingURL=transaction.js.map"]},"metadata":{},"sourceType":"module"}