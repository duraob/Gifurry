{"ast":null,"code":"var _jsxFileName = \"/home/jet/Documents/buildspace/gif-portal-starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react'; // Constants\n// buildspace twitter stuff\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  _s();\n\n  // State\n  const [walletAddress, setWalletAddress] = useState(null); // Is phantom wallet connected?\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom Wallet is found!');\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          console.log('Connected with PubKey:', response.publicKey.toString());\n          setWalletAddress(response.publicKey.toString());\n        } else {\n          alert('Solana obj is not found - get Phantom Wallet');\n        }\n      }\n    } catch (err) {\n      console.log('err');\n    }\n  }; // Connect Wallet Logic\n\n\n  const connectWallet = async () => {\n    // Render UI when user wallet is not connected\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with pubKey:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect Wallet!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this); // Check for connected wallet\n\n\n  useEffect(() => {\n    window.addEventListener('load', async event => {\n      await checkIfWalletIsConnected();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: walletAddress ? 'authed-container' : 'container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: \"\\uD83D\\uDDBC jetgoof's portal to Solana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"Jump into your metaverse gif library \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), !walletAddress && renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FzBUXhdaz8WdQW5Q+ejK8XBThPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jet/Documents/buildspace/gif-portal-starter/src/App.js"],"names":["useEffect","useState","TWITTER_HANDLE","TWITTER_LINK","App","walletAddress","setWalletAddress","checkIfWalletIsConnected","solana","window","isPhantom","console","log","response","connect","onlyIfTrusted","publicKey","toString","alert","err","connectWallet","renderNotConnectedContainer","addEventListener","event","twitterLogo"],"mappings":"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","sourcesContent":["import twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport {useEffect, useState} from 'react';\n\n// Constants\n\n// buildspace twitter stuff\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  // Is phantom wallet connected?\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {solana} = window;\n\n      if(solana) {\n        if(solana.isPhantom) {\n          console.log('Phantom Wallet is found!');\n          const response = await solana.connect({onlyIfTrusted: true});\n          console.log('Connected with PubKey:', response.publicKey.toString());\n          setWalletAddress(response.publicKey.toString());\n        } else {\n          alert('Solana obj is not found - get Phantom Wallet');\n        }\n      }\n    } catch (err) {\n      console.log('err');\n    }\n  };\n\n  // Connect Wallet Logic\n  const connectWallet = async () => {\n    // Render UI when user wallet is not connected\n    const {solana} = window;\n\n    if(solana) {\n      const response = await solana.connect();\n      console.log('Connected with pubKey:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect Wallet!\n    </button>\n  );\n\n  // Check for connected wallet\n  useEffect(() => {\n    window.addEventListener('load', async (event) => {\n      await checkIfWalletIsConnected();\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className={walletAddress ? 'authed-container' : 'container'}>\n        <div className=\"header-container\">\n          <p className=\"header\">ðŸ–¼ jetgoof's portal to Solana</p>\n          <p className=\"sub-text\">\n            Jump into your metaverse gif library âœ¨\n          </p>\n          {!walletAddress && renderNotConnectedContainer()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}